export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH
(( ${+commands[go]} )) && export PATH=$(go env GOPATH)/bin:$PATH

{{ if not .personal -}}
export GOPROXY=https://artifactory.ubisoft.org/artifactory/go,https://goproxy.io,direct
export GOPRIVATE="*.ubisoft.org,*.ubi.com"
{{- end }}

export EDITOR=vim

alias kubectl="kubecolor"
alias kc="kubectl"
alias kca="kubectl apply"
alias kcd="kubectl delete"
alias kcl="kubectl logs"
alias kcs="kubectl describe"
alias kcga="kubectl get secret,configmap,pod,rs,service,statefulset,jobs,cronjobs,pvc,pv -o wide"
# 'nslookup' command in busybox has issues.
alias kcrnetdbg="kubectl run net-debug --image=nicolaka/netshoot --image-pull-policy=IfNotPresent -it --rm -- /bin/sh"
alias kcdnetdbg="kubectl delete pod/net-debug"

alias pc='proxychains4 -q'

test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

{{ if not .personal -}}
(( ${+commands[fleet]} )) && eval "$(fleet dev env 2>/dev/null)"

###################################################################################################
# Proxy
function enable_proxy() {
  export HTTPS_PROXY=http://proxy.ubisoft.org:3128;
  export HTTP_PROXY=http://proxy.ubisoft.org:3128;
  export https_proxy=http://proxy.ubisoft.org:3128;
  export http_proxy=http://proxy.ubisoft.org:3128;
  export no_proxy=localhost,127.0.0.1,::1,.ubisoft.org,.ubisoft.com,.ubisoft.onbe,.local.fleet.ubi.com,kubernetes.docker.internal;
  export NO_PROXY=$no_proxy
}

function disable_proxy() {
  export HTTPS_PROXY="";
  export HTTP_PROXY="";
  export https_proxy="";
  export http_proxy="";
  export no_proxy=localhost,127.0.0.1,::1,.ubisoft.org,.ubisoft.com,.ubisoft.onbe,.local.fleet.ubi.com,kubernetes.docker.internal;
  export NO_PROXY=$no_proxy
}

enable_proxy
{{- end }}

###################################################################################################
# Powerlevel10k
# https://github.com/romkatv/powerlevel10k

# Powerlevel10k requires zsh version is greater than or equal to 5.1
if [[ "`printf '%s\n' $(zsh --version | cut -d ' ' -f2) '5.1' | sort -V -r | head -n1`" = "5.1" ]]; then
  ZSH_THEME="robbyrussell"
else
  ZSH_THEME="powerlevel10k/powerlevel10k"
  [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

  # Instant prompt
  # https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#how-do-i-initialize-direnv-when-using-instant-prompt
  (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi

  (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"
fi

###################################################################################################
# Oh my zsh
# https://github.com/ohmyzsh/ohmyzsh
export ZSH="$HOME/.oh-my-zsh"

plugins=(
  git
  web-search
  docker
  docker-compose
  kubectl
  kubectx
  microk8s
  minikube
  helm
  command-not-found
  sudo
  zsh-syntax-highlighting
  zsh-autosuggestions
)
[[ -f $ZSH/oh-my-zsh.sh ]] && source $ZSH/oh-my-zsh.sh

###################################################################################################
# Bat
# https://github.com/sharkdp/bat
export BAT_THEME=Dracula

###################################################################################################
# Fzf
# https://github.com/junegunn/fzf
[[ -f ~/.fzf.key-bindings.zsh ]] && source ~/.fzf.key-bindings.zsh
[[ -f ~/.fzf.completion.zsh ]] && source ~/.fzf.completion.zsh

export FZF_DEFAULT_COMMAND='fd --type file --type directory --follow --hidden --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND='fd --type directory --follow --hidden --exclude .git'

### CTRL-T Paste the selected files and directories onto the command-line
export FZF_CTRL_T_OPTS="
  --height 100%
  --preview 'if [ -d {} ]; then (tree -C {} | head -500) else (bat -n --color=always --theme Dracula -r :500 {}) fi'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

### CTRL-R Paste the selected command from history onto the command-line
# CTRL-/ to toggle small preview window to see the full command
# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="
  --height 100%
  --preview 'echo {}' --preview-window up:3:hidden:wrap
  --bind 'ctrl-/:toggle-preview'
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard(pbcopy command required)'"

### cd into the selected directory
export FZF_ALT_C_OPTS="--height 100% --preview 'tree -C {} | head -500'"

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --height 100% --preview 'tree -C {} | head -500'                                                                                 "$@" ;;
    export|unset) fzf --height 100% --preview "eval 'echo \$'{}"                                                                                       "$@" ;;
    ssh)          fzf --height 100% --preview 'dig {}'                                                                                                 "$@" ;;
    *)            fzf --height 100% --preview 'if [ -d {} ]; then (tree -C {} | head -500) else (bat -n --color=always --theme Dracula -r :500 {}) fi' "$@" ;;
  esac
}
