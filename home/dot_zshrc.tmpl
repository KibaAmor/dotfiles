{{ if not .personal -}}
export default_no_proxy = localhost,127.0.0.1,::1,kubernetes.docker.internal,.ubisoft.org,.ubisoft.com,.ubisoft.onbe,.local.fleet.ubi.com
export default_all_proxy = http://proxy.ubisoft.org:3128
{{- else -}}
export default_no_proxy = localhost,127.0.0.1,::1,kubernetes.docker.internal
export default_all_proxy = http://localhost:7890
{{- end }}

test -e "${HOME}/.customrc.pre.sh" && source "${HOME}/.customrc.pre.sh"

export PATH=$HOME/.local/bin:$HOME/bin:/usr/local/bin:/snap/bin:$PATH
(( ${+commands[go]} )) && export PATH=$(go env GOPATH)/bin:$PATH

export GO111MODULE=on
{{ if not .personal -}}
export GOPROXY=https://artifactory.ubisoft.org/artifactory/go,https://goproxy.io,direct
export GOPRIVATE="*.ubisoft.org,*.ubi.com"
{{- else -}}
export GOPROXY=https://goproxy.cn,direct
{{- end }}

export EDITOR=vim

export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"
(( ${+command[brew]} )) && eval "$($(brew --prefix)/bin/brew shellenv)"

# export MINIKUBE_HOME="${HOME}/.minikube"

test -e /opt/conda/etc/profile.d/conda.sh && source /opt/conda/etc/profile.d/conda.sh
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

(( ${+commands[fleet]} )) && eval "$(fleet dev env 2>/dev/null)"

###################################################################################################
# Proxy
function enable_proxy() {
  export no_proxy=$default_no_proxy
  export all_proxy=$default_all_proxy
  export https_proxy=$all_proxy
  export http_proxy=$all_proxy
  export ftp_proxy=$all_proxy

  export NO_PROXY=$no_proxy
  export ALL_PROXY=$all_proxy
  export HTTPS_PROXY=$https_proxy
  export HTTP_PROXY=$http_proxy
  export FTP_PROXY=$ftp_proxy
}

function disable_proxy() {
  export no_proxy=
  export all_proxy=
  export https_proxy=$all_proxy
  export http_proxy=$all_proxy
  export ftp_proxy=$all_proxy

  export NO_PROXY=$no_proxy
  export ALL_PROXY=$all_proxy
  export HTTPS_PROXY=$https_proxy
  export HTTP_PROXY=$http_proxy
  export FTP_PROXY=$ftp_proxy
}

enable_proxy

###################################################################################################
# Powerlevel10k
# https://github.com/romkatv/powerlevel10k

# change GITSTATUS_CACHE_DIR or XDG_CACHE_HOME to change default cache dir for gitstatus
# https://github.com/romkatv/gitstatus/blob/master/install

# Powerlevel10k requires zsh version is greater than or equal to 5.1
if [[ "`printf '%s\n' $(zsh --version | cut -d ' ' -f2) '5.1' | sort -V -r | head -n1`" = "5.1" ]]; then
  # or we can install zsh-bin to upgrade zsh version
  # https://github.com/romkatv/zsh-bin
  # sh -c "$(curl -fsSL https://raw.githubusercontent.com/romkatv/zsh-bin/master/install)"

  ZSH_THEME="robbyrussell"
else
  ZSH_THEME="powerlevel10k/powerlevel10k"
  [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

  # Instant prompt
  # https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#how-do-i-initialize-direnv-when-using-instant-prompt
  (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi

  (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"
fi

###################################################################################################
# Oh my zsh
# https://github.com/ohmyzsh/ohmyzsh
export ZSH="$HOME/.oh-my-zsh"

HIST_STAMPS="yyyy-mm-dd"

plugins=(
  git
  web-search
  docker
  docker-compose
  kubectl
  kubectx
  microk8s
  minikube
  helm
  command-not-found
  sudo
  zsh-syntax-highlighting
  zsh-autosuggestions
  extract
  z
  zsh-you-should-use
  zsh-bat
  cp
)
[[ -f $ZSH/oh-my-zsh.sh ]] && source $ZSH/oh-my-zsh.sh

typeset -g ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=12'

###################################################################################################
# Bat
# https://github.com/sharkdp/bat
export BAT_THEME=Dracula

###################################################################################################
# Fzf
# https://github.com/junegunn/fzf
[[ -f ~/.fzf.key-bindings.zsh ]] && source ~/.fzf.key-bindings.zsh
[[ -f ~/.fzf.completion.zsh ]] && source ~/.fzf.completion.zsh

export FZF_DEFAULT_COMMAND='fd --type file --type directory --follow --hidden --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND='fd --type directory --follow --hidden --exclude .git'

### CTRL-T Paste the selected files and directories onto the command-line
export FZF_CTRL_T_OPTS="
  --height 100%
  --preview 'if [ -d {} ]; then (tree -C {} | head -500) else (bat -n --color=always --theme Dracula -r :500 {}) fi'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

### CTRL-R Paste the selected command from history onto the command-line
# CTRL-/ to toggle small preview window to see the full command
# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="
  --height 100%
  --preview 'echo {}' --preview-window up:3:hidden:wrap
  --bind 'ctrl-/:toggle-preview'
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard(pbcopy command required)'"

### cd into the selected directory
export FZF_ALT_C_OPTS="--height 100% --preview 'tree -C {} | head -500'"

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --height 100% --preview 'tree -C {} | head -500'                                                                                 "$@" ;;
    export|unset) fzf --height 100% --preview "eval 'echo \$'{}"                                                                                       "$@" ;;
    ssh)          fzf --height 100% --preview 'dig {}'                                                                                                 "$@" ;;
    *)            fzf --height 100% --preview 'if [ -d {} ]; then (tree -C {} | head -500) else (bat -n --color=always --theme Dracula -r :500 {}) fi' "$@" ;;
  esac
}

alias kubectl="kubecolor"
alias k="kubectl"
alias ks="kubectl -n kube-system"

# 'nslookup' command in busybox has issues.
alias krnetdbg="kubectl run net-debug --image=nicolaka/netshoot --image-pull-policy=IfNotPresent -it --rm"
alias kdelnetdbg="kubectl delete pod/net-debug"

# run command `kubectl api-resources` to get all resources and its shortnames.
alias kapires="kubectl api-resources"

alias mk="minikube"

alias pc="proxychains4 -q"

alias ls="lsd"

test -e "${HOME}/.customrc.post.sh" && source "${HOME}/.customrc.post.sh"
